{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/custom-datasource.js","webpack:///./src/index.js","webpack:///./src/schema.graphql","webpack:///./src/schema.js","webpack:///./src/server.js","webpack:///external \"apollo-datasource\"","webpack:///external \"apollo-server\""],"names":["CustomDatasource","DataSource","constructor","customers","customer1","id","name","surname","orders","customer2","getCustomer","Promise","resolve","PORT","port","process","env","server","listen","console","log","Query","customer","_","dataSources","customDatasource","ApolloServer","typeDefs","resolvers"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;AClFA;;AAEA,MAAMA,gBAAN,SAA+BC,4BAA/B,CAA0C;AACxCC,aAAW,GAAG;AACZ;AACA,SAAKC,SAAL,GAAiB;AACfC,eAAS,EAAE;AACTC,UAAE,EAAE,WADK;AAETC,YAAI,EAAE,MAFG;AAGTC,eAAO,EAAE,KAHA;AAITC,cAAM,EAAE,CACN;AACEH,YAAE,EAAE;AADN,SADM,EAIN;AACEA,YAAE,EAAE;AADN,SAJM;AAJC,OADI;AAcfI,eAAS,EAAE;AACTJ,UAAE,EAAE,WADK;AAETC,YAAI,EAAE,MAFG;AAGTC,eAAO,EAAE,SAHA;AAITC,cAAM,EAAE,CACN;AACEH,YAAE,EAAE;AADN,SADM;AAJC;AAdI,KAAjB;AAyBD;;AAED,QAAMK,WAAN,CAAkBL,EAAlB,EAAsB;AACpB,WAAOM,OAAO,CAACC,OAAR,CAAgB,KAAKT,SAAL,CAAeE,EAAf,CAAhB,CAAP;AACD;;AAhCuC;;eAmC3BL,gB;;;;;;;;;;;;;;;ACrCf;;;;AAEA,MAAM;AAAEa,MAAI,EAAEC;AAAR,IAAiBC,OAAO,CAACC,GAA/B;;AAEAC,gBAAOC,MAAP,CAAc;AAAEJ;AAAF,CAAd,EAAwB,MAAM;AAC5BK,SAAO,CAACC,GAAR,CAAa,sBAAqBN,IAAK,EAAvC;AACD,CAFD,E;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;;eCTe;AACbO,OAAK,EAAE;AACLC,YAAQ,EAAE,CAACC,CAAD,EAAI;AAAElB;AAAF,KAAJ,EAAY;AAAEmB,iBAAW,EAAE;AAAEC;AAAF;AAAf,KAAZ,KAAsDA,gBAAgB,CAACf,WAAjB,CAA6BL,EAA7B;AAD3D;AADM,C;;;;;;;;;;;;;;;;;;;;ACAf;;AACA;;AACA;;AACA;;;;AAEA,MAAMY,MAAM,GAAG,IAAIS,0BAAJ,CAAiB;AAC9BC,UAAQ,EAARA,gBAD8B;AAE9BC,WAAS,EAATA,eAF8B;AAG9BJ,aAAW,EAAE,OAAO;AAClBC,oBAAgB,EAAE,IAAIzB,yBAAJ;AADA,GAAP;AAHiB,CAAjB,CAAf;eAQeiB,M;;;;;;;;;;;;ACbf,8C;;;;;;;;;;;ACAA,0C","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import { DataSource } from 'apollo-datasource';\n\nclass CustomDatasource extends DataSource {\n  constructor() {\n    super();\n    this.customers = {\n      customer1: {\n        id: 'customer1',\n        name: 'john',\n        surname: 'doe',\n        orders: [\n          {\n            id: 'order1',\n          },\n          {\n            id: 'order2',\n          },\n        ],\n      },\n      customer2: {\n        id: 'customer2',\n        name: 'sean',\n        surname: 'spencer',\n        orders: [\n          {\n            id: 'order4',\n          },\n        ],\n      },\n    };\n  }\n\n  async getCustomer(id) {\n    return Promise.resolve(this.customers[id]);\n  }\n}\n\nexport default CustomDatasource;\n","import server from './server.js';\n\nconst { PORT: port } = process.env;\n\nserver.listen({ port }, () => {\n  console.log(`ðŸš€ Server ready at ${port}`);\n});\n","module.exports = `type Customer {\n  id: ID!\n  firstName: String\n  lastName: String\n}\n\ntype Query {\n  customer(id: ID!): Customer\n}\n`","export default {\n  Query: {\n    customer: (_, { id }, { dataSources: { customDatasource } }) => customDatasource.getCustomer(id),\n  },\n};\n","import { ApolloServer } from 'apollo-server';\nimport resolvers from './schema.js';\nimport typeDefs from './schema.graphql';\nimport CustomDatasource from './custom-datasource.js';\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n  dataSources: () => ({\n    customDatasource: new CustomDatasource(),\n  }),\n});\n\nexport default server;\n","module.exports = require(\"apollo-datasource\");","module.exports = require(\"apollo-server\");"],"sourceRoot":""}